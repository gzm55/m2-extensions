<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://mav en.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.gzm55.maven</groupId>
  <artifactId>m2-extension-resolver</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Add support .m2/extensions.xml</name>
  <description>When building this project, it will resolve .m2/extensions.xml,
  and place extensions jar files into .m2/ext/ folder.</description>
  <url>https://github.com/gzm55/m2-extensions</url>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>James Z.M. Gao</name>
      <email>gaozm55@gmail.com</email>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/gzm55/m2-extensions.git</connection>
    <developerConnection>scm:git:git@github.com:gzm55/m2-extensions.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/gzm55/m2-extensions/tree/master</url>
  </scm>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/gzm55/m2-extensions/issues</url>
  </issueManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- support maven [3.3.1, ) -->
    <project.maven.min-version>3.3.1</project.maven.min-version>
    <maven.install.skip>true</maven.install.skip>
    <maven.deploy.skip>true</maven.deploy.skip>

    <maven.build.timestamp.format>yyyyMMdd-HHmmssSSS'Z'</maven.build.timestamp.format>

    <sort.verifyFail>STOP</sort.verifyFail>

    <dollarChar>$</dollarChar>
    <unix.loader.begin.match>### BEGIN ${project.artifactId}:[^ ]* ###</unix.loader.begin.match>
    <unix.loader.end.match>### END ${project.artifactId}:[^ ]* ###</unix.loader.end.match>
    <unix.loader.begin.tag>### BEGIN ${project.artifactId}:${project.version} ###</unix.loader.begin.tag>
    <unix.loader.end.tag>### END ${project.artifactId}:${project.version} ###</unix.loader.end.tag>
    <unix.loader.placeholder>### INSERT BY ${project.artifactId} ${maven.build.timestamp} ###</unix.loader.placeholder>
  </properties>

  <build>
    <defaultGoal>clean deploy</defaultGoal>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-invoker-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M1</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[${project.maven.min-version},)</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <version>2.8.0</version>
        <executions>
          <execution>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <keepBlankLines>true</keepBlankLines>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>with-m2-extensions-profile</id>
      <activation>
        <file>
          <exists>${user.home}/.m2/extensions.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-m2-extensions</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/its/resolve-m2-extensions/.mvn</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${user.home}/.m2</directory>
                      <includes>
                        <include>extensions.xml</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-invoker-plugin</artifactId>
            <executions>
              <execution>
                <id>resolve-m2-extensions</id>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>
              <settingsFile>${project.basedir}/src/it/settings.xml</settingsFile>
              <environmentVariables>
                <MAVEN_SKIP_RC>true</MAVEN_SKIP_RC>
              </environmentVariables>
              <cloneClean>false</cloneClean>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>update-m2-ext</id>
                <phase>install</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <move file="${user.home}/.m2/ext" tofile="${user.home}/.m2/ext.${maven.build.timestamp}.bak" failonerror="false" quiet="true"/>
                    <copy todir="${user.home}/.m2/ext" flatten="true">
                      <fileset dir="${project.build.directory}/it-repo">
                        <include name="**/*.jar"/>
                        <exclude name="**/aopalliance-*.jar"/>
                        <exclude name="**/cdi-api-*.jar"/>
                        <exclude name="**/guava-*.jar"/>
                        <exclude name="**/org.eclipse.sisu.inject-*.jar"/>
                        <exclude name="**/plexus-component-annotations-*.jar"/>
                        <exclude name="**/plexus-utils-*.jar"/>
                      </fileset>
                    </copy>
                    <copy todir="${user.home}/.m2/ext" file="${user.home}/.m2/extensions.xml"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>without-m2-extensions-profile</id>
      <activation>
        <file>
          <missing>${user.home}/.m2/extensions.xml</missing>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>backup-m2-ext</id>
                <phase>install</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <move file="${user.home}/.m2/ext" tofile="${user.home}/.m2/ext.${maven.build.timestamp}.bak" failonerror="false" quiet="true"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deploy-on-unix</id>
      <activation>
        <os>
          <family>!windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>inject-into-local-mavenrc</id>
                <phase>deploy</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <echo file="${user.home}/.mavenrc" append="true" encoding="${project.build.sourceEncoding}">${unix.loader.placeholder}${line.separator}</echo>
                    <replaceregexp file="${user.home}/.mavenrc" flags="g" encoding="${project.build.sourceEncoding}">
                      <regexp pattern="(.)${unix.loader.placeholder}$"/>
                      <substitution expression="\1${line.separator}${unix.loader.placeholder}"/>
                    </replaceregexp>
                    <replaceregexp file="${user.home}/.mavenrc" flags="gsm" encoding="${project.build.sourceEncoding}">
                      <regexp pattern="^(${unix.loader.end.match}$.*)${unix.loader.placeholder}$\n"/>
                      <substitution expression="\1"/>
                    </replaceregexp>
                    <replaceregexp file="${user.home}/.mavenrc" flags="gm" encoding="${project.build.sourceEncoding}">
                      <regexp pattern="^${unix.loader.begin.match}$(\n^#{0,2}([^#].*)?$)*\n+^${unix.loader.end.match}$"/>
                      <substitution expression="${unix.loader.placeholder}"/>
                    </replaceregexp>

                    <loadfile property="unix.loader" srcFile="${project.build.scriptSourceDirectory}/loader.sh"/>
                    <replace file="${user.home}/.mavenrc"
                             token="${unix.loader.placeholder}"
			     value="${unix.loader.begin.tag}${line.separator}: ${dollarChar}{M2_EXTENSIONS_HOME:='${maven.multiModuleProjectDirectory}'}${line.separator}${unix.loader}${line.separator}${unix.loader.end.tag}"
                             encoding="${project.build.sourceEncoding}"/>
                    <replaceregexp file="${user.home}/.mavenrc" flags="gm" encoding="${project.build.sourceEncoding}">
                      <regexp pattern="^(${unix.loader.begin.match}$\n)\n+"/>
                      <substitution expression="\1"/>
                    </replaceregexp>
                    <replaceregexp file="${user.home}/.mavenrc" flags="gm" encoding="${project.build.sourceEncoding}">
                      <regexp pattern="\n+(\n^${unix.loader.end.match})$"/>
                      <substitution expression="\1"/>
                    </replaceregexp>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deploy-on-windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>inject-into-local-mavenrc_pre</id>
                <phase>deploy</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <echo level="warning">[WARN] Don't support windows to inject loading scripts into mavenrc_pre.cmd now!${line.separator}</echo>
                    <echo level="warning">[WARN] You have to manually edit mavenrc_pre.cmd, and set MAVEN_OPTS to contain '-Dmaven.ext.class.path=[all jars in .m2/ext]'${line.separator}</echo>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
